% This file was created with JabRef 2.9.
% Encoding: UTF8

@INPROCEEDINGS{ISI:000258930500001,
  author = {Ambler, Scott W.},
  title = {Agile software development at scale},
  booktitle = {BALANCING AGILITY AND FORMALISM IN SOFTWARE ENGINEERING},
  year = {2008},
  editor = {Meyer, B and Nawrocki, JR and Walter, B},
  volume = {5082},
  series = {Lecture Notes in Computer Science},
  pages = {1-12},
  organization = {IFIP TC 2},
  note = {2nd IFIP Central and East European Conference on Software Engineering
	Techniques (CEE-SET 2007), Poznan, POLAND, OCT 10-12, 2007},
  abstract = {Since 2001 agile software development approaches are being adopted
	across a wide range of organizations and are now being applied at
	scale. There are eight factors to consider - team size, geographical
	distribution, entrenched Culture, system complexity, legacy systems,
	regulatory compliance, organizational distribution, governance and
	enterprise focus - when scaling agile. Luckily a collection of techniques
	and strategies exist which scale agile approaches, including considering
	the full development lifecycle, Agile Model Driven Development (AMDD),
	continuous independent testing, adopting proven strategies, agile
	database techniques, and lean development governance. It is possible
	to scale agile approaches, but you will need to look beyond the advice
	provided by the ``agile in the small{''} literature.},
  db = {wok},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  isbn = {978-3-540-85278-0},
  issn = {0302-9743},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000258930500001}
}

@ARTICLE{Barlow201125,
  author = {Barlow, J.B.a and Giboney, J.S.b and Keith, M.J.c and Wilson, D.W.d
	and Schuetzler, R.M.b and Lowry, P.B.e and Vance, A.f },
  title = {Overview and guidance on agile development in large organizations},
  journal = {Communications of the Association for Information Systems},
  year = {2011},
  volume = {29},
  pages = {25-44},
  number = {1},
  note = {cited By (since 1996) 1},
  abstract = {A continual debate surrounds the effectiveness of agile software development
	practices. Some organizations adopt agile practices to become more
	competitive, improve processes, and reduce costs. Other organizations
	are skeptical about whether agile development is beneficial. Large
	organizations face an additional challenge in integrating agile practices
	with existing standards and business processes. To examine the effects
	of agile development practices in large organizations, we review
	and integrate scientific literature and theory on agile software
	development. We further organize our theory and observations into
	a framework with guidelines for large organizations considering agile
	methodologies. Based on this framework, we present recommendations
	that suggest ways large organizations with established processes
	can successfully implement agile practices. Our analysis of the literature
	and theory provides new insight for researchers of agile software
	development and assists practitioners in determining how to adopt
	agile development in their organizations.},
  affiliation = {Operations and Decision Technologies Department, Kelley School of
	Business, Indiana University, United States; Department of Management
	Information Systems, Eller College of Management, University of Arizona,
	United States; Department of Computer Information and Decision Management,
	West Texas A and M University, United States; Department of Entrepreneurship
	and Information Systems, Washington State University, United States;
	Department of Information Systems, City University of Hong Kong,
	Hong Kong; Information Systems Department, Marriott School of Management,
	Brigham Young University, United States},
  author_keywords = {Agile development; Agility; Coordination; Extreme programming; Informal
	communication; Interdependencies; Large organizations; Life cycle;
	Scrum; Software development; Waterfall method},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-80051604954&partnerID=40&md5=9591522bf41933af070c20f8a62a06eb}
}

@INPROCEEDINGS{6170020,
  author = {Bass, J.M.},
  title = {Influences on Agile Practice Tailoring in Enterprise Software Development},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {1 -9},
  month = {feb.},
  abstract = {Agile development projects have become a reality in large enterprises
	using offshore development models. A case study involving seven international
	companies with offices in Bangalore, India, and London, UK was conducted,
	including interviews with 19 practitioners. The contribution of this
	paper is to illustrate the reasons for tailoring Agile practices
	within the context of large enterprises. The findings show that scrum
	roles and practices did not conflict with enterprise policies or
	processes and were thought to improve product quality and productivity.
	However, agile practices from the XP tradition were not so widely
	adopted. Test driven development did not integrate well within enterprises
	where independent quality assurance teams were constituted as separate
	departments. Continuous integration was found to be challenging where
	enterprise software products required time consuming regression testing
	and elaborate code release processes. While adoption of coding standards
	and collective code ownership are necessary to facilitate interaction
	between disparate stakeholder groups.},
  db = {ieeexplore},
  doi = {10.1109/AgileIndia.2012.15},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  keywords = {Scrum;XP;agile development project;agile practice tailoring;code release
	process;coding standard;collective code ownership;enterprise software
	development;enterprise software product;international companies;offshore
	development model;regression testing;test driven development;business
	data processing;regression analysis;software prototyping;},
  review15 = {interesting},
  reviewer = {casper, maria}
}

@ARTICLE{976920,
  author = {Boehm, B.},
  title = {Get ready for agile methods, with care},
  journal = {Computer},
  year = {2002},
  volume = {35},
  pages = {64-69},
  number = {1},
  abstract = {Although many of their advocates consider the agile and plan-driven
	software development methods polar opposites, synthesizing the two
	can provide developers with a comprehensive spectrum of tools and
	options. Real-world examples argue for and against agile methods.
	Responding to change has been cited as the critical technical success
	factor in the Internet browser battle between Microsoft and Netscape.
	But overresponding to change has been cited as the source of many
	software disasters, such as the $3 billion overrun of the US Federal
	Aviation Administration's Advanced Automation System for national
	air traffic control. The author believes that both agile and plan-driven
	approaches have a responsible center and overinterpreting radical
	fringes. Agile and plan-driven methods both form part of the planning
	spectrum. Thus, while each approach has a home ground within which
	it performs very well, and much better than the other, a combined
	approach is feasible and preferable in some circumstances},
  doi = {10.1109/2.976920},
  issn = {0018-9162},
  keywords = {professional aspects;project management;software engineering;Internet
	browser battle;agile driven software development methods;agile methods;agile-driven
	approach;combined approach;comprehensive spectrum;critical technical
	success factor;national air traffic control;plan-driven approach;plan-driven
	software development methods;planning spectrum;real-world examples;software
	disasters;Air traffic control;Capability maturity model;Computer
	crime;Coordinate measuring machines;Home automation;Information technology;Internet;Process
	planning;Product development;Programming}
}

@ARTICLE{1504661,
  author = {Boehm, B. and Turner, R.},
  title = {Management challenges to implementing agile processes in traditional
	development organizations},
  journal = {Software, IEEE},
  year = {2005},
  volume = {22},
  pages = {30-39},
  number = {5},
  abstract = {Discussions with traditional developers and managers concerning agile
	software development practices nearly always contain two somewhat
	contradictory ideas. They find that on small, stand-alone projects,
	agile practices are less burdensome and more in tune with the software
	industry's increasing needs for rapid development and coping with
	continuous change. Managers face several barriers, real and perceived,
	when they try to bring agile approaches into traditional organizations.
	They categorized the barriers either as problems only in terms of
	scope or scale, or as significant general issues needing resolution.
	From these two categories, we've identified three areas - development
	process conflicts, business process conflicts, and people conflicts
	- that we believe are the critical challenges to software managers
	of large organizations in bringing agile approaches to bear in their
	projects.},
  doi = {10.1109/MS.2005.129},
  issn = {0740-7459},
  keywords = {DP industry;project management;software development management;agile
	software development practices;business process conflicts;development
	process conflicts;people conflicts;project management challenges;software
	industry;software management;traditional development organizations;Aerospace
	engineering;Aerospace materials;Automatic testing;Computer industry;Programming;Project
	management;Refining;Software development management;Software engineering;Software
	systems;Agile software development;agile process;process integration;systems
	engineering}
}

@CONFERENCE{Bombosch2010221,
  author = {Bombosch, U. and Bente, S. and Hesselmann, M. and Seifert, G.},
  title = {Applying scrum and XP in an enterprise context},
  booktitle = {INFORMATIK 2010 - Service Science - Neue Perspektiven fur die Informatik,
	Beitrage der 40. Jahrestagung der Gesellschaft fur Informatik e.V.
	(GI)},
  year = {2010},
  volume = {2},
  pages = {221-226},
  note = {cited By (since 1996) 0},
  abstract = {This article describes the challenges in applying the Scrum and eXtreme
	Programming (XP) software development practices, summarising several
	years of industry experience. The crucial questions are: How applicable
	are these practices in an enterprise context, and do they show their
	well-known advantages under today's characteristic business conditions?
	The assessment takes the project management, enterprise, human, software
	engineering, and business viewpoint in order to shed light on applicability
	gaps, and best practices to fill them.},
  affiliation = {Tata Consultancy Services Deutschland GmbH, Messe Turm, 60308 Frankfurt
	am Main, Germany},
  db = {Scopus},
  document_type = {Conference Paper},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84874258434&partnerID=40&md5=5c294f1b5bd78fbdb8a4e45b5428d72d}
}

@ARTICLE{1438324,
  author = {Ceschi, M. and Sillitti, A. and Succi, G. and De Panfilis, S.},
  title = {Project management in plan-based and agile companies},
  journal = {Software, IEEE},
  year = {2005},
  volume = {22},
  pages = {21 - 27},
  number = {3},
  month = {may-june},
  abstract = {Agile methods are a recent set of development techniques that apply
	a human-centered approach to software production. The agile approach
	aims to deliver high-quality products faster, producing satisfied
	customers. We conducted an empirical study to investigate whether
	agile methods change and improve project management practices in
	software companies. Survey results show that adopting agile methods
	appears to improve management of the development process and customer
	relationships. This article has given a first analysis of the advantages
	and disadvantages of adopting agile methods from a project management
	perspective.},
  db = {ieeexplore},
  doi = {10.1109/MS.2005.75},
  filterkimi = {interesting},
  filtermaria = {Exclude},
  issn = {0740-7459},
  keywords = {agile methods; customer relationship management; human-centered approach;
	project management; software development; customer satisfaction;
	project management; software development management;},
  review15 = {interesting},
  reviewer = {maria, kimi}
}

@ARTICLE{ISI:000264701000006,
  author = {Chan, Frank K. Y. and Thong, James Y. L.},
  title = {Acceptance of agile methodologies: A critical review and conceptual
	framework},
  journal = {DECISION SUPPORT SYSTEMS},
  year = {2009},
  volume = {46},
  pages = {803-814},
  number = {4},
  month = {MAR},
  note = {11th Pacific Asia Conference on Information Systems, Auckland, NEW
	ZEALAND, JUL 03-06, 2007},
  abstract = {It is widely believed that systems development methodologies (SDMs)
	can help improve the software development process. Nevertheless,
	their deployment often encounters resistance from systems developers.
	Agile methodologies, the latest batch of SDMs that are most suitable
	in dealing with volatile business requirements, are likely to face
	the same challenge as they require developers to drastically change
	their work habits and acquire new skills. This paper addresses what
	can be done to overcome the challenge to agile methodologies acceptance.
	We provide a critical review of the extant literature on the acceptance
	of traditional SDMs and agile methodologies, and develop a conceptual
	framework for agile methodologies acceptance based on a knowledge
	management perspective. This framework can provide guidance for future
	research into acceptance of agile methodologies, and has implications
	for practitioners concerned with the effective deployment of agile
	methodologies. (C) 2008 Elsevier B.V. All rights reserved.},
  db = {wok},
  doi = {10.1016/j.dss.2008.11.009},
  filterkimi = {???},
  filtermaria = {Interesting},
  issn = {0167-9236},
  owner = {kimi},
  researcherid-numbers = {Fettke, Peter/E-9691-2010 Thong, James/B-9123-2011},
  review15 = {interesting},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000264701000006}
}

@ARTICLE{Cohen20041,
  author = {Cohen, D. and Lindvall, M. and Costa, P.},
  title = {An Introduction to Agile Methods},
  journal = {Advances in Computers},
  year = {2004},
  volume = {62},
  pages = {1-66},
  number = {C},
  note = {cited By (since 1996) 36},
  abstract = {Agile Methods are creating a buzz in the software development community,
	drawing their fair share of advocates and opponents. While some people
	consider agile methods the best thing that has happened to software
	development in recent years, other people view them as a backlash
	to software engineering and compare them to hacking. The aim of this
	chapter is to introduce the reader to agile methods allowing him/her
	to judge whether or not agile methods could be useful in modern software
	development. The chapter discusses the history behind agile methods
	as well as the agile manifesto, a statement from the leaders of the
	agile movement. It looks at what it means to be agile, discusses
	the role of management, describes and compares some of the more popular
	agile methods, provides a guide for deciding where an agile approach
	is applicable, and lists common criticisms. It summarizes empirical
	studies, anecdotal reports, and lessons learned from applying agile
	methods and concludes with an analysis of various agile methods.
	The target audiences for this chapter include practitioners, who
	will be interested in the discussion of the different methods and
	their applications, researchers who may want to focus on the empirical
	studies and lessons learned, and educators looking to teach and learn
	more about agile methods. © 2004 Elsevier Inc. All rights reserved.},
  affiliation = {Fraunhofer Center for Experimental Software Engineering, 4321 Hartwick
	rd, Suite 500, College Park, MD 20742, United States},
  db = {scoups},
  document_type = {Review},
  filterkimi = {interesting},
  filtermaria = {Exclude},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77956759866&partnerID=40&md5=6f64ee55e8320245b55237b190bac4b5}
}

@ARTICLE{1204378,
  author = {Cohn, M. and Ford, D.},
  title = {Introducing an agile process to an organization [software development]},
  journal = {Computer},
  year = {2003},
  volume = {36},
  pages = {74-78},
  number = {6},
  abstract = {The transition from a plan-driven to an agile software development
	process affects not only the development team members, but also other
	teams, departments, and management. Any new process will likely attract
	developers excited to try it while repelling those opposed to change.
	Thus, how an agile process is introduced into an organization significantly
	affects its ultimate success.},
  doi = {10.1109/MC.2003.1204378},
  issn = {0018-9162},
  keywords = {software development management;agile software development process;Collaborative
	software;Collaborative tools;Collaborative work;Contracts;Documentation;Product
	development;Programming profession;Project management;Software tools;Stress}
}

@ARTICLE{5560625,
  author = {Conboy, K. and Coyle, S. and Xiaofeng Wang and Pikkarainen, M.},
  title = {People over Process: Key Challenges in Agile Development},
  journal = {Software, IEEE},
  year = {2011},
  volume = {28},
  pages = {48 -57},
  number = {4},
  month = {july-aug. },
  abstract = {Case studies of 17 organizations that have used agile methods for
	more than three years uncovered many serious ``people{''} challenges
	including recruitment, training, motivation, and performance evaluation.},
  db = {ieeexplore},
  doi = {10.1109/MS.2010.132},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  issn = {0740-7459},
  keywords = {agile development;motivation;organisations;performance evaluation;recruitment;training;organisational
	aspects;recruitment;training;},
  review15 = {interesting},
  reviewer = {maria, kimi}
}

@ARTICLE{Dingsøyr20121213,
  author = {Dingsøyr, T.a b and Nerur, S.c and Balijepally, V.d and Moe, N.B.a
	},
  title = {A decade of agile methodologies: Towards explaining agile software
	development},
  journal = {Journal of Systems and Software},
  year = {2012},
  volume = {85},
  pages = {1213-1221},
  number = {6},
  note = {cited By (since 1996) 2},
  abstract = {Ever since the agile manifesto was created in 2001, the research community
	has devoted a great deal of attention to agile software development.
	This article examines publications and citations to illustrate how
	the research on agile has progressed in the 10 years following the
	articulation of the manifesto. Specifically, we delineate the conceptual
	structure underlying agile scholarship by performing an analysis
	of authors who have made notable contributions to the field. Further,
	we summarize prior research and introduce contributions in this special
	issue on agile software development. We conclude by discussing directions
	for future research and urging agile researchers to embrace a theory-based
	approach in their scholarship. © 2012 Elsevier Inc. All rights reserved.},
  affiliation = {SINTEF, NO-7465 Trondheim, Norway; Norwegian University of Science
	and Technology, Department of Computer and Information Science, Sem
	Sælandsvei 7-9, NO-7491 Trondheim, Norway; Department of Information
	Systems and Operations Management, University of Texas at Arlington,
	Arlington, TX 76019, United States; Department of Accounting, Finance
	and MIS, Prairie View AandM University, Prairie View, TX 77446-0519,
	United States},
  author_keywords = {Agile software development; Crystal method; eXtreme programming, XP;
	Feature-driven development; Information systems; Lean software development;
	Scrum; Software engineering; Theory},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84859527852&partnerID=40&md5=72bbd13e6b9509d7a37e25747543dfd8}
}

@ARTICLE{Dybå2008833,
  author = {Dybå, T. and Dingsøyr, T.},
  title = {Empirical studies of agile software development: A systematic review},
  journal = {Information and Software Technology},
  year = {2008},
  volume = {50},
  pages = {833-859},
  number = {9-10},
  note = {cited By (since 1996) 227},
  abstract = {Agile software development represents a major departure from traditional,
	plan-based approaches to software engineering. A systematic review
	of empirical studies of agile software development up to and including
	2005 was conducted. The search strategy identified 1996 studies,
	of which 36 were identified as empirical studies. The studies were
	grouped into four themes: introduction and adoption, human and social
	factors, perceptions on agile methods, and comparative studies. The
	review investigates what is currently known about the benefits and
	limitations of, and the strength of evidence for, agile methods.
	Implications for research and practice are presented. The main implication
	for research is a need for more and better empirical studies of agile
	software development within a common research agenda. For the industrial
	readership, the review provides a map of findings, according to topic,
	that can be compared for relevance to their own settings and situations.
	© 2008 Elsevier B.V. All rights reserved.},
  affiliation = {SINTEF ICT, S.P. Andersensv. 15B, NO-7465 Trondheim, Norway},
  author_keywords = {Agile software development; Empirical software engineering; Evidence-based
	software engineering; Extreme programming; Research synthesis; Scrum;
	Systematic review; XP},
  db = {scoups},
  document_type = {Review},
  filterkimi = {exclude},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-44649189162&partnerID=40&md5=9ba53dc692e8d5005b3f800ec0d97230}
}

@ARTICLE{Elshamy200746,
  author = {Elshamy, A.a and Elssamadisy, A.b},
  title = {Applying agile to large projects: New agile software development
    practices for large projects},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
    in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2007},
  volume = {4536 LNCS},
  pages = {46-53},
  note = {cited By (since 1996) 0},
  abstract = {Large software development projects are not agile by nature. Large
    projects are not easy to implement, they are even harder to implement
    using agile methodologies. Based on over seven years of experience
    building software systems using agile methodologies we found that
    large software projects require more practices than the usual used
    in small projects. In this paper, we will introduce a set of new
    and modified development practices, which will help developing a
    large agile project. © Springer-Verlag Berlin Heidelberg 2007.},
  affiliation = {ThoughtWorks Inc., Chicago, IL 60661, United States; Valtech Technologies,
    Addison, TX 75001, United States},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {include},
  filtermaria = {???},
  owner = {kimi},
  review15 = {include},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-38149027134&partnerID=40&md5=d12ef9f48afd950658bd416786186117}
}

@INPROCEEDINGS{Elssamadisy2006,
  author = {Elssamadisy, A. and West, D.},
  title = {Adopting agile practices: An incipient pattern language},
  booktitle = {PLoP 2006 - PLoP Pattern Languages of Programs 2006 Conference Proceedings},
  year = {2006},
  note = {cited By (since 1996) 0},
  abstract = {The increasing popularity of Agile approaches to software development
	forces an increasing number of organizations to deal with issues
	of Agile adoption (and adaptation). This paper lays some groundwork
	for a pattern language that will facilitate the transition to agility.
	We introduce patterns that focus on the dynamics of adoption rather
	than the structure that results from adoption. To establish the desired
	foundation it is necessary to push the pattern envelope in terms
	of traditional pattern documentation format and relationships among
	patterns that form a pattern language. Copyright 2006 ACM.},
  affiliation = {Gemba Systems, Amherst, MA, United States},
  art_number = {1},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-67449108403&partnerID=40&md5=8d3daa3c9d1f319f749f9d709dff67c6}
}

@ARTICLE{947100,
  author = {Highsmith, J. and Cockburn, A.},
  title = {Agile software development: the business of innovation},
  journal = {Computer},
  year = {2001},
  volume = {34},
  pages = {120-127},
  number = {9},
  abstract = {The rise and fall of the dotcom-driven Internet economy shouldn't
	distract us from seeing that the business environment continues to
	change at a dramatically increasing pace. To thrive in this turbulent
	environment, we must confront the business need for relentless innovation
	and forge the future workforce culture. Agile software development
	approaches, such as extreme programming, Crystal methods, lean development,
	Scrum, adaptive software development (ASD) and others, view change
	from a perspective that mirrors today's turbulent business and technology
	environment},
  db = {ieeexplore},
  doi = {10.1109/2.947100},
  issn = {0018-9162},
  keywords = {business data processing;management of change;software engineering;Crystal
	methods;Internet economy;Scrum;adaptive software development;agile
	software development approaches;changing business environment;extreme
	programming;innovation;lean development;software management;technology
	environment;workforce culture;Adaptive systems;Collaborative software;Collaborative
	work;Contracts;Documentation;Humans;Programming;Software development
	management;Technological innovation;Variable speed drives}
}

@CONFERENCE{Koehnemann2009295,
  author = {Koehnemann, H.a and Coats, M.b },
  title = {Experiences applying agile practices to large systems},
  booktitle = {Proceedings - 2009 Agile Conference, AGILE 2009},
  year = {2009},
  pages = {295-300},
  note = {cited By (since 1996) 0},
  abstract = {Literature has credited agile development practices with saving failing
	projects and helping with the success of many others. The projects
	of many agile success stories have similar characteristics - small
	teams, co-located, relatively free of reporting and governance constraints,
	etc. This paper presents experiences applying agile practices to
	large systems projects. The information was gathered from multiple
	large projects and covers practices that scaled successfully as well
	as those that did not. We present Agile development practices, the
	value they bring to both developers and business, and based on our
	experience, which practices successfully scale to large systems.},
  affiliation = {Rocket Gang, Scottsdale, AZ, United States; General Dynamics C4 Systems,
	Scottsdale, AZ, United States},
  art_number = {5261067},
  db = {Scopus},
  document_type = {Conference Paper},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-70449673279&partnerID=40&md5=1005e994d6622ddf972631be5527b224}
}

@ARTICLE{Kurapati201216,
  author = {Kurapati, N.a and Manyam, V.S.C.a and Petersen, K.a b },
  title = {Agile software development practice adoption survey},
  journal = {Lecture Notes in Business Information Processing},
  year = {2012},
  volume = {111 LNBIP},
  pages = {16-30},
  note = {cited By (since 1996) 0},
  abstract = {Agile methodologies are often not used ``out of the box{''} by practitioners,
	instead they select the practices that fit their needs best. However,
	little is known which agile practices the practitioners choose. This
	study investigates agile practice adoption by asking practitioners
	which practices they are using on project and organizational level.
	We investigated how commonly used individual agile practices are,
	combinations of practices and their frequency of usage, as well as
	the degree of compliance to agile methodologies (Scrum and XP), and
	as how successful practitioners perceive the adoption. The research
	method used is survey. The survey has been sent to over 600 respondents,
	and has been posted on LinkedIn, Yahoo, and Google groups. In total
	109 answers have been received. Practitioners can use the knowledge
	of the commonality of individual practices and combinations of practices
	as support in focusing future research efforts, and as decision support
	in selecting agile practices. © 2012 Springer-Verlag Berlin Heidelberg.},
  affiliation = {Blekinge Institute of Technology, Karlskrona 37140, Sweden; Ericsson
	AB, Box 518, Karlskrona SE-371 23, Sweden},
  author_keywords = {Adoption; Agile Practices; Software Development; Survey},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84862065588&partnerID=40&md5=33608508e155809d9e9f122cc43a510a}
}

@ARTICLE{1377040,
  author = {Lindvall, M. and Muthig, Dirk and Dagnino, A. and Wallin, C. and
	Stupperich, M. and Kiefer, D. and May, J. and Kahkonen, T.},
  title = {Agile software development in large organizations},
  journal = {Computer},
  year = {2004},
  volume = {37},
  pages = {26-34},
  number = {12},
  abstract = {The need to see compelling evidence before adopting new methods looms
	greater in large organizations because of their complexity and the
	need to integrate new technologies and processes with existing ones.
	To further evaluate agile methods and their underlying software development
	practices, several Software Experience Center (SEC) member companies
	initiated a series of activities to discover if agile practices match
	their organizations' needs. Although each organization evaluated
	agile methods according to its specific needs, here we attempt to
	generalize their findings by analyzing some of their common experiences
	in the particular context of large organizations with well-established
	structures and processes. We base this analysis on experience collected
	and shared among four SEC members namely ABB, DaimlerChrysler, Motorola,
	and Nokia.},
  db = {ieeexplore},
  doi = {10.1109/MC.2004.231},
  issn = {0018-9162},
  keywords = {organisational aspects;programming;project management;software management;software
	process improvement;Software Experience Center;agile software development;extreme
	programming;organizational needs;software engineering;software process
	improvement;software project management;Companies;Costs;Data analysis;Driver
	circuits;Mission critical systems;Productivity;Programming;Software
	engineering;Software maintenance;Software quality}
}

@ARTICLE{Livermore200831,
  author = {Livermore, J.A.},
  title = {Factors that significantly impact the implementation of an agile
	software development methodology},
  journal = {Journal of Software},
  year = {2008},
  volume = {3},
  pages = {31-36},
  number = {4},
  note = {cited By (since 1996) 6},
  abstract = {The Internet economy has altered the current rules of software engineering.
	Traditional development methodologies have proven too cumbersome
	to meet the rapidly changing requirements and short product cycles
	demanded by business today. To meet these rapidly changing requirements,
	software developers have developed agile software development methodologies
	(SDMs) utilizing iterative development, prototyping, templates, and
	minimal documentation requirements. This research project investigated
	agile SDM implementation using an online survey sent to software
	development practitioners worldwide. This survey data was used to
	identify factors related to agile SDM implementation. The factors
	that significantly impacted agile methodology implementations included
	training, management involvement, access to external resources, and
	corporation size. Other factors such as using models, having an implementation
	plan, collocating the development team, and developing software for
	Internet or intranet use did not significantly impact the implementation
	of an agile software development methodology. A number of the factors
	that impact the implementation of an agile development methodology
	are completely under the control of management. Organizations that
	are considering implement ting an agile methodology are able to manipulate
	some of these factors to increase the opportunities for success of
	their methodology. © 2008 Academy Publisher.},
  affiliation = {Walsh College, Business Information Technology, Detroit, MI, United
	States},
  author_keywords = {Agile methodology implementation; Agile software development; Extreme
	programming; Scrum},
  db = {Scopus},
  document_type = {Article},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78651581351&partnerID=40&md5=28925048eaaf1746ee86f1a86eee2cd1}
}

@ARTICLE{McHugh2012141,
  author = {McHugh, M. and McCaffery, F. and Casey, V.},
  title = {Barriers to adopting agile practices when developing medical device
	software},
  journal = {Communications in Computer and Information Science},
  year = {2012},
  volume = {290 CCIS},
  pages = {141-147},
  note = {cited By (since 1996) 0},
  abstract = {Agile methodologies such as XP and Scrum are founded upon the four
	values and twelve principles of agile software development. A software
	development project is only considered to be truly agile if these
	values and principles are followed. However, software developed for
	use in medical devices must be regulatory compliant and this can
	make the process of following a single agile methodology such as
	XP difficult to achieve. This paper outlines how we identified the
	barriers to agile adoption in the medical device software domain
	through performing a survey. These barriers include: lack of documentation;
	maintaining traceability; regulatory compliance; lack of up front
	planning and the process of managing multiple releases. Based on
	this research recommendations are also made as to how these barriers
	can be overcome. © 2012 Springer-Verlag.},
  affiliation = {Regulated Software Research Group, Department of Computing and Mathematics,
	Dundalk Institute of Technology and Lero, Dundalk Co., Louth, Ireland},
  author_keywords = {Agile; Barriers; Medical; Plan Driven; Safety Critical; Scrum; XP},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {interesting},
  filtermaria = {Exclude},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84862177878&partnerID=40&md5=1051d45b3fe8a2444642007a6479a931}
}

@INPROCEEDINGS{4221862,
  author = {Misra, S.C. and Kumar, U. and Kumar, V. and Grant, G.},
  title = {The Organizational Changes Required and the Challenges Involved in
	Adopting Agile Methodologies in Traditional Software Development
	Organizations},
  booktitle = {Digital Information Management, 2006 1st International Conference
	on},
  year = {2007},
  pages = {25 -28},
  month = {dec.},
  abstract = {Agile software development methodologies have recently gained widespread
	popularity. The Agile Manifesto states valuing ``individuals, and
	interactions over processes and tools, working software over comprehensive
	documentation, customer collaboration over contract negotiation,
	and responding to change over following apian{''} by M. Fowler (2005).
	Different organizations are transforming their traditional software
	development practices into agile ones. There have been several disparate
	anecdotal evidences in support of the changes required and the challenges
	involved. In this paper, we provide a consolidated picture of the
	important changes required and the challenges involved in such transformation
	projects. We also provide a conceptual framework that would help
	managers for focusing on the important changes required and the challenges
	involved in agile software development projects.},
  db = {ieeexplore},
  doi = {10.1109/ICDIM.2007.369325},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  keywords = {agile software development methodologies;agile software development
	projects;organizational changes;software development organizations;software
	development practices;organisational aspects;project management;software
	engineering;software management;},
  review15 = {interesting},
  reviewer = {maria, kimi}
}

@ARTICLE{Misra20091869,
  author = {Misra, S.C.a and Kumar, V.b and Kumar, U.b },
  title = {Identifying some important success factors in adopting agile software
	development practices},
  journal = {Journal of Systems and Software},
  year = {2009},
  volume = {82},
  pages = {1869-1890},
  number = {11},
  note = {cited By (since 1996) 21},
  abstract = {Agile software development (ASD) is an emerging approach in software
	engineering, initially advocated by a group of 17 software professionals
	who practice a set of ``lightweight{''} methods, and share a common
	set of values of software development. In this paper, we advance
	the state-of-the-art of the research in this area by conducting a
	survey-based ex-post-facto study for identifying factors from the
	perspective of the ASD practitioners that will influence the success
	of projects that adopt ASD practices. In this paper, we describe
	a hypothetical success factors framework we developed to address
	our research question, the hypotheses we conjectured, the research
	methodology, the data analysis techniques we used to validate the
	hypotheses, and the results we obtained from data analysis. The study
	was conducted using an unprecedentedly large-scale survey-based methodology,
	consisting of respondents who practice ASD and who had experience
	practicing plan-driven software development in the past. The study
	indicates that nine of the 14 hypothesized factors have statistically
	significant relationship with ``Success{''}. The important success
	factors that were found are: customer satisfaction, customer collaboration,
	customer commitment, decision time, corporate culture, control, personal
	characteristics, societal culture, and training and learning. © 2009
	Elsevier Inc. All rights reserved.},
  affiliation = {Indian Institute of Technology (IIT), Kanpur, India; Carleton University,
	Ottawa, Canada},
  author_keywords = {Agile software; Success factors},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-71749097189&partnerID=40&md5=d6534db81aa700f82de02a7e2a5997b2}
}

@ARTICLE{Misra2010451,
  author = {Misra, S.C.a and Kumar, V.b and Kumar, U.b },
  title = {Identifying some critical changes required in adopting agile practices
	in traditional software development projects},
  journal = {International Journal of Quality and Reliability Management},
  year = {2010},
  volume = {27},
  pages = {451-474},
  number = {4},
  note = {cited By (since 1996) 1},
  abstract = {Purpose: Agile software development (ASD) is currently an emerging
	approach in software engineering for improving quality, initially
	advocated by a group of 17 software professionals who practice a
	set of ``lightweight{''} methods, and share a common set of values
	of software development. Owing to the attractive claims of successes
	of the ASD approach, many traditional projects, which used to practice
	plan-driven software development, are gradually transitioning into
	ASD-based development. This paper seeks to report the results from
	a survey-based ex-post-facto study aimed at determining the relative
	importance, if any, of the changes traditional plan-driven software
	development projects have to undergo to adopt ASD practices. Design/methodology/approach:
	The study was conducted using a web-based survey with ASD practitioners
	who had experience of practicing plan-driven software development
	in the past. ASD practitioners from a wide range of industrial sectors
	participated in the study. Similarly, the study is not restricted
	to any specific organisation/project size, culture, or nationality
	- the respondents were widely geographically distributed across continents.
	Findings: The study received 241 responses, of which 165 were usable.
	The study did not reveal any substantial difference in importance
	of the four classes of changes hypothesised - changes in culture,
	changes in management style, changes in knowledge management strategy
	and changes in development processes. The authors believe that this
	is an important finding because it is indicative of not isolating
	one class of changes from another in practical transition exercises.
	However, another noteworthy observation was that transitioning from
	heavily process-centric to short, iterative, test-driven, and people-centric
	development was considered by the largest percentage (roughly 77
	per cent) of respondents to be very important. The open-ended questions
	in the study also revealed three additional classes of changes: changes
	in personal characteristics, changes in customer attitude, and changes
	in knowledge and education of stakeholders. Originality/value: In
	this work an attempt was made to gain an understanding of the relative
	importance of the different critical changes that would be helpful
	to a project manager who is involved in the transition from traditional
	plan-driven software development practices to agile software development
	practices. © Emerald Group Publishing Limited.},
  affiliation = {Indian Institute of Technology (IIT), Kanpur, India; Carleton University,
	Ottawa, Canada},
  author_keywords = {Change management; Software engineering},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77951433101&partnerID=40&md5=6d858e83608b11c2321084fd27ac6df6}
}

@ARTICLE{Nerur200572,
  author = {Nerur, S.a and Mahapatra, R.a and Mangalaraj, G.b },
  title = {Challenges of migrating to agile methodologies},
  journal = {Communications of the ACM},
  year = {2005},
  volume = {48},
  pages = {72-78},
  number = {5},
  note = {cited By (since 1996) 121},
  abstract = {The principles related to the agile methodologies being adopted by
	different organizations are discussed. The opportunities and benefits
	that agile methodologies afford make them attractive, organizations
	must be circumspect in embracing them or in integrating them with
	existing practices. Agile methodologies are ideal for projects that
	exhibits high variability in tasks, in the capabilities of people,
	and in the technology being used. They are also appropriate for projects
	where the value of the product to be delivered is very important
	to customers.},
  affiliation = {Department of Information Systems, University of Texas, Arlington,
	United States; University of Texas, Arlington, United States},
  db = {scoups},
  document_type = {Review},
  filterkimi = {interesting},
  filtermaria = {Exclude},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-18744385544&partnerID=40&md5=049a41ad1557d0c3a868207eed6b05e3}
}

@CONFERENCE{Paasivaara2011363,
  author = {Paasivaara, M. and Lassenius, C.},
  title = {Scaling scrum in a large distributed project},
  booktitle = {Proceedings - 2011 5th International Symposium on Empirical Software
	Engineering and Measurement, ESEM 2011},
  year = {2011},
  pages = {363-367},
  note = {cited By (since 1996) 1},
  abstract = {This paper presents a currently ongoing single case study on adopting
	and scaling Scrum in a large software development project distributed
	across four sites. The data was gathered by 19 semi-structured interviews
	of project personnel, including managers, architects, developers
	and testers. At the time of the interviews the project had grown
	in size during the past 2,5 years from two collocated Scrum teams
	to 20 teams located in four countries and employing over 170 persons.
	In this paper we first describe our research approach and goals.
	Then we briefly summarize the preliminary results of this ongoing
	study: we explain how Scrum practices were scaled, as well as discuss
	the successes and challenges experienced when adopting the agile
	practices and scaling them, while at the same time growing the project
	size at a fast pace. Even though this project has been very successful
	from the business point of view, it has experienced a lot of problems
	in applying Scrum, especially related to scaling the agile practices.
	Thus, it seems that adapting Scrum practices to work well in a large
	distributed setting is challenging. © 2011 IEEE.},
  affiliation = {Department of Computer Science and Engineering, Aalto University,
	School of Science, P.O. Box 19210, 00076 Aalto, Finland},
  art_number = {6092589},
  author_keywords = {Agile software development; Global software development; Scaling scrum},
  db = {Scopus},
  document_type = {Conference Paper},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84055224182&partnerID=40&md5=11dae623fc8674dec255df1299dbeb02}
}

@ARTICLE{Qureshi2012358,
  author = {Qureshi, M.R.J.},
  title = {Agile software development methodology for medium and large projects},
  journal = {IET Software},
  year = {2012},
  volume = {6},
  pages = {358-363},
  number = {4},
  note = {cited By (since 1996) 0},
  abstract = {Extreme programming (XP) is one of the most widely used agile methodologies
	for software development. It intends to improve software quality
	and responsiveness to changing customer requirements. Despite the
	facts that the use of XP offers a number of benefits and it has been
	a widely used agile methodology, XP does not offer the same benefits
	when it comes to medium and large software projects. Some of the
	reasons for this are weak documentation, lack of strong architecture
	and ignorance to risk awareness during the software development.
	Owing to the ever-increasing demand of agile approaches, this study
	addresses the problem of XP's ability to handle medium and large
	projects. Most of the companies that employ XP as a development methodology
	for medium and large projects face this problem, which echoes the
	importance of this problem. To address this problem, in this study
	XP model is extended in such a way that it equally offers its benefits
	for medium- and large-scale projects. As an evaluation of the extended
	XP, three independent industrial case studies are conducted. The
	case studies are described and results are presented in the study.
	The results provide evidence that the extended XP can be beneficial
	for medium and large software development projects. © 2012 The Institution
	of Engineering and Technology.},
  affiliation = {King Abdul Aziz University, Faculty of Computing and Information Technology,
	P.O. Box 80221, Jeddah 21589, Saudi Arabia},
  db = {Scopus},
  document_type = {Article},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84866881999&partnerID=40&md5=14795a79fe7f59af0dc4643069ad67a7}
}

@ARTICLE{Rajlich:2006:CPS:1145287.1145289,
  author = {Rajlich, Vaclav},
  title = {Changing the paradigm of software engineering},
  journal = {Commun. ACM},
  year = {2006},
  volume = {49},
  pages = {67--70},
  number = {8},
  month = aug,
  acmid = {1145289},
  address = {New York, NY, USA},
  doi = {10.1145/1145287.1145289},
  issn = {0001-0782},
  issue_date = {August 2006},
  numpages = {4},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/1145287.1145289}
}

@INPROCEEDINGS{Rodríguez2012139,
  author = {Rodríguez, P. and Markkula, J. and Oivo, M. and Turula, K.},
  title = {Survey on agile and lean usage in finnish software industry},
  booktitle = {International Symposium on Empirical Software Engineering and Measurement},
  year = {2012},
  pages = {139-148},
  note = {cited By (since 1996) 0},
  abstract = {Earlier empirical studies have demonstrated the interest that agile
	methods have generated in the software industry. Currently, lean
	approaches are increasingly adopted for complementing agile methods
	in software processes. With the goal of providing up-today results
	that can be used by organizations implementing or planning to implement
	agile and/or lean methods, we have conducted a study on the current
	stage of agile and lean adoption and usage in the software industry.
	For this purpose, we conducted an extensive survey among Finnish
	software practitioners in 2011, using the membership registry of
	The Finnish Information Processing Association (FIPA) as a sampling
	frame. 408 responses were collected from 200 software intensive organizations
	in the study. The survey included questions for identifying the rate
	of agile and lean usage in software organizations as well as the
	implementation of specific methods and practices, goals in adopting
	agile and lean, reasons for not applying these methods and effects
	of the agile and lean usage. The results of the survey reveal that
	a majority of respondents' organizational units are using agile and/or
	lean methods (58%). Furthermore, lean appears as a new player, being
	used by 24% of respondents, mainly in combination with agile (21%).
	The reasons and benefits for using agile and lean methods appeared
	to correspond in most parts to the findings of the earlier research.
	Generally, the experiences of using agile and lean methods seem to
	be rather positive, although challenges, such as obtaining management
	support and limitations for scaling agile in distributed settings,
	were also identified. Copyright 2012 ACM.},
  affiliation = {Department of Information Processing Sciences, University of Oulu,
	P.O.Box 3000, 90014 Oulu, Finland},
  author_keywords = {Agile; Lean; Survey},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84867565328&partnerID=40&md5=d91b02a18ffc20b45a8b2bf4f8cb986b}
}

@ARTICLE{Rohunen201077,
  author = {Rohunen, A.a and Rodriguez, P.a b and Kuvaja, P.a and Krzanik, L.a
	and Markkula, J.a },
  title = {Approaches to agile adoption in large settings: A comparison of the
	results from a literature analysis and an industrial inventory},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2010},
  volume = {6156 LNCS},
  pages = {77-91},
  note = {cited By (since 1996) 0},
  abstract = {Nowadays the software industry is applying agile methods widely. However,
	there appears to be a lack of comprehensive guidelines and strategies
	addressing agile adoption. In addition, agile methods and practices
	often have to be tailored to be integrated into existing processes.
	In this study, agile adoption frameworks and strategies discussed
	in the literature, especially in the context of agile in the large,
	are analysed. The findings from the literature are validated by and
	compared to an industrial inventory. Based on the validation and
	the comparison, new approaches for agile adoption in large settings
	have been identified: incremental agile adoption approaches combining
	both bottom-up and top-down strategies; the important role of identified
	key practices that enable quick feedback and adaptation in the early
	adoption stages; and approaches derived from the multidimensional
	nature of agility. These approaches make possible to overcome the
	restrictions of conventional agile methods. © 2010 Springer-Verlag.},
  affiliation = {University of Oulu, Department of Information Processing Sciences,
	P.O. Box 3000, 90014 Oulu, Finland; Technical University of Madrid
	(UPM), E.U. Informatica, Ctra. Valencia Km. 7, Madrid E-28031, Spain},
  author_keywords = {Adoption of agile methods; agile adoption frameworks; agile in the
	large; strategies in agile adoption},
  db = {Scopus},
  document_type = {Conference Paper},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77955443882&partnerID=40&md5=c039ef0480b7ac82c4f54fd6a5b2f08e}
}

@INPROCEEDINGS{6225488,
  author = {Mengjiao Shen and Wenrong Yang and Guoping Rong and Dong Shao},
  title = {Applying agile methods to embedded software development: A systematic
	review},
  booktitle = {Software Engineering for Embedded Systems (SEES), 2012 2nd International
	Workshop on},
  year = {2012},
  pages = {30 -36},
  month = {june},
  abstract = {Since the 21st century, embedded software products have been pervasive
	in the world we live in, however, this emerging industry is facing
	many challenges due to its own unique characteristics which distinguish
	it from non-embedded software development. The other hand, agile
	software development methods are adopted by organizations worldwide
	at an increasing speed. It seems meaningful to explore to apply agile
	methods to embedded software development and in this paper a systematic
	review was conducted to supply an initial guide to the researchers
	and industrial readership.},
  db = {ieeexplore},
  doi = {10.1109/SEES.2012.6225488},
  excluded = {Kimi, title},
  filterkimi = {exclude},
  filtermaria = {Interesting},
  keywords = {agile methods;agile software development;embedded software development;embedded
	software products;systematic review;embedded systems;software prototyping;ubiquitous
	computing;},
  review15 = {interesting},
  reviewer = {kimi, casper}
}

@ARTICLE{Šochová2010346,
  author = {Šochová, Z.},
  title = {Hidden gap in agile methods adoption},
  journal = {Frontiers in Artificial Intelligence and Applications},
  year = {2010},
  volume = {217},
  pages = {346-356},
  note = {cited By (since 1996) 0},
  abstract = {The paper extends a research on agile adoption process done by the
	author as a dissertation thesis [1]. It investigates the success
	and failures of agile adoption process and offers directions on how
	to improve the agile adoption in different environments. Furthermore
	the paper suggests how to start the agile adoption process, providing
	a guideline defining which questions should be answered and which
	areas should be understood before the organization may start the
	adoption process. As an extension of this area, the paper investigates
	an agile maturity, helping organization in the iterative process
	improving effort. Additionally, having an appropriate company culture
	was identified as the most important aspect during the agile adoption
	process. But however, this implies the change ability and acceptance
	for most of the organizations. In addition to that, the paper summarizes
	a soft guideline on how to adopt agile methods, and defines two new
	frameworks on how to start adoption process and how to improve it
	during the adoption iteration cycle. © 2010 The authors and IOS Press.
	All rights reserved.},
  affiliation = {CERTICON a.s., Prague, Czech Republic},
  author_keywords = {Agile; agile adoption; change management; collaboration; company culture;
	cooperation; framework; self-organized teams; team},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78049250992&partnerID=40&md5=e6d1403117a14251cd577ba7b7ff47a1}
}

@ARTICLE{Vijayasarathy2012137,
  author = {Vijayasarathy, L. and Turk, D.},
  title = {Drivers of agile software development use: Dialectic interplay between
	benefits and hindrances},
  journal = {Information and Software Technology},
  year = {2012},
  volume = {54},
  pages = {137-148},
  number = {2},
  note = {cited By (since 1996) 2},
  abstract = {Context: Agile software development with its emphasis on producing
	working code through frequent releases, extensive client interactions
	and iterative development has emerged as an alternative to traditional
	plan-based software development methods. While a number of case studies
	have provided insights into the use and consequences of agile, few
	empirical studies have examined the factors that drive the adoption
	and use of agile. Objective: We draw on intention-based theories
	and a dialectic perspective to identify factors driving the use of
	agile practices among adopters of this software development methodology.
	Method: Data for the study was gathered through an anonymous online
	survey of software development professionals. We requested participation
	from members of a selected list of online discussion groups, and
	received 98 responses. Results: Our analyses reveal that subjective
	norm and training play a significant role in influencing software
	developers' use of agile processes and methods, while perceived benefits
	and perceived limitations are not primary drivers of agile use among
	adopters. Interestingly, perceived benefit emerges as a significant
	predictor of agile use only if adopters face hindrances to their
	agile practices. Conclusion: We conclude that research in the adoption
	of software development innovations should examine the effects of
	both enabling and detracting factors and the interactions between
	them. Since training, subjective norm, and the interplay between
	perceived benefits and perceived hindrances appear to be key factors
	influencing the adoption of agile methods, researchers can focus
	on how to (a) perform training on agile methods more effectively,
	(b) facilitate the dialog between developers and managers about perceived
	benefits and hindrances, and (c) capitalize on subjective norm to
	publicize the benefits of agile methods within an organization. Further,
	when managing the transition to new software development methods,
	we recommend that practitioners adapt their strategies and tactics
	contingent on the extent of perceived hindrances to the change. ©
	2011 Elsevier B.V. All rights reserved.},
  affiliation = {Colorado State University, Computer Information Systems Department,
	Fort Collins, CO 80523, United States},
  author_keywords = {Agile software development; Dialectic theory; Innovation adoption;
	Perceived hindrance; Subjective norm; Training},
  db = {scoups},
  document_type = {Article},
  filterkimi = {interesting},
  filtermaria = {Interesting},
  owner = {kimi},
  review15 = {interesting},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-81055140353&partnerID=40&md5=c0e35d87c27794bdc2a0433f4d5c950a}
}

@ARTICLE{Vinekar200631,
  author = {Vinekar, V.a and Slinkman, C.W.b and Nerur, S.b },
  title = {Can agile and traditional systems development approaches coexist?
	An ambidextrous view},
  journal = {Information Systems Management},
  year = {2006},
  volume = {23},
  pages = {31-42},
  number = {3},
  note = {cited By (since 1996) 25},
  abstract = {Emerging evidence seems to indicate that most systems development
	organizations are attempting to utilize both agile and traditional
	approaches. This study aims to understand the reasons organizations
	feel the need for this unlikely juxtaposition and the organizational
	challenges in sustaining the opposing cultures. Drawing on the extensive
	literature in organizational theory and management, we advocate ambidexterity
	as a viable solution to systems development organizations attempting
	to harness the benefits of both agile and traditional development.},
  affiliation = {University of Texas, Arlington, United States; Department of Information
	Systems, University of Texas, Arlington, United States},
  document_type = {Article},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33745645047&partnerID=40&md5=094b6feba9fd46dad57c00cea0b106a8}
}

